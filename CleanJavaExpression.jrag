/*******************************************************************************
 * Copyright (c) 2012 Cesar Yeep.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the BSD 3-Clause License
 * ("New BSD" or "BSD Simplified") which accompanies this distribution,
 * and is available at
 * http://opensource.org/licenses/BSD-3-Clause
 * 
 * Contributors:
 *     Cesar Yeep - initial API and implementation
 ******************************************************************************/
import java.util.ArrayList;
import java.util.HashSet;
//import java.util.List;
import java.util.Set;

aspect CleanJavaExpression {

  // Pretty printer
				
	
	public void AnythingLiteral.toString(StringBuffer s){
		s.append(" anything ");
	}
	
	
	public void CJResult.toString(StringBuffer s){
		s.append(" result ");
	}
	
	
	public void InformalDescription.toString(StringBuffer s){
		s.append("(* " + getDescription() + " *)");
	}
	
	/*
	public void AnyIterator.toString(StringBuffer s){
		getIterable().toString(s);
		s.append(" -> ");
		s.append(" any(");
		getElement().getModifiers().toString(s);
		getElement().getTypeAccess().toString(s);
		s.append(" " + getElement().name());
		s.append("; ");
		getB1().toString(s);
		s.append("; ");
		getB2().toString(s);
		s.append(")");
	}
	*/
	
  // Type analysis
  
	// Informal description
	eq InformalDescription.type() = unknownType();
	
	// Anything literal
	eq AnythingLiteral.type() = unknownType();
		
	// Result variable
	eq CJResult.type() = unknownType();
	eq CJResult.isVariable() = true;
		
	//eq AnyIterator.type() = getElement().type();
	
}
