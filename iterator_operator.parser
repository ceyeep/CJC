// Iterators

Expr primary_no_new_array =
	iterate_operator_invocation.o  {: return o; :}
  ;

Access iterate_operator_invocation =
		primary.p ITERATORACCESS ITERATEOP LPAREN formal_parameter.i COMMA formal_parameter_with_expression.a
		SEMICOLON iterate_operator_boolean_expression.b? expression.e RPAREN 
		{: return new IterateOperator(p, ITERATEOP, i, a, b, e);  :}
	|	name.n ITERATORACCESS ITERATEOP LPAREN formal_parameter.i COMMA formal_parameter_with_expression.a
		SEMICOLON iterate_operator_boolean_expression.b? expression.e RPAREN 
		{: return new IterateOperator(n, ITERATEOP, i, a, b, e);  :}
		
	//TODO: check complete implementation of method_invoctation in GenericMethods.parser in JastAddJ 5
	;
  
Opt iterate_operator_boolean_expression =
	expression.e SEMICOLON                       {: return new Opt(e); :}
  ;
 
ParameterDeclarationWithExpression formal_parameter_with_expression =
	modifiers.m? type.t IDENTIFIER dims.d? ITEQ assignment_expression.a 
	{: return new ParameterDeclarationWithExpression(new Modifiers(m), t.addArrayDims(d), IDENTIFIER, a); :}
  ;
 